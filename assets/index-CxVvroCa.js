import{_ as T,h as k,i as y,o as c,c as i,a as D,F as b,r as v,b as A,w as d,g as f,e as m,f as w,d as N,j as x,T as M}from"./index-Dmafc7Tg.js";import S from"./Card-Bb7AX96W.js";const V=o=>{const e=Array.from(o);for(let s=e.length-1;s>0;s--){const l=Math.floor(Math.random()*(s+1));[e[s],e[l]]=[e[l],e[s]]}return e},_=["square","rectangle","circle","leaf"],h=4,u=()=>{const o=Array.from({length:h},()=>_).flat();return V(o)},p=250,B={class:"wm-game"},O={class:"wm-cards"},R={name:"MemoryCardsView"},j=Object.assign(R,{setup(o){const e=k({shuffled:u(),flipped:new Map,matched:new Set,areDisabled:!1}),s=(a,r)=>(e.flipped.get(a)||[]).includes(r)||e.matched.has(a),l=y(()=>e.matched.size===_.length),C=()=>{e.shuffled=u(),e.flipped.clear(),e.matched.clear(),e.areDisabled=!1},g=(a,r)=>{const{flipped:t}=e;if(e.areDisabled||l.value||s(a,r))return;const n=[...t.get(a)??[],r];t.set(a,n),t.size>1?(e.areDisabled=!0,setTimeout(()=>{e.areDisabled=!1,t.clear()},p*3)):n.length===h&&setTimeout(()=>{e.matched.add(a),t.clear()},p)};return(a,r)=>(c(),i("div",B,[D("div",O,[(c(!0),i(b,null,v(e.shuffled,(t,n)=>(c(),f(m(S),{key:`card: ${n}`,type:t,"is-flipped":s(t,n),"is-matched":e.matched.has(t),onClick:z=>g(t,n)},null,8,["type","is-flipped","is-matched","onClick"]))),128))]),A(M,{appear:"",name:"slide-up",type:"transition",mode:"out-in"},{default:d(()=>[l.value?(c(),f(m(w),{key:0,size:"lg",onClick:C},{default:d(()=>r[0]||(r[0]=[N(" Restart ")])),_:1})):x("",!0)]),_:1})]))}}),I=T(j,[["__scopeId","data-v-8fa5d16b"]]);export{I as default};
